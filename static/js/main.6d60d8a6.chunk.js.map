{"version":3,"sources":["api/posts.ts","components/PostsList/PostsList.tsx","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/users.ts","App.tsx","index.tsx"],"names":["BASE_URL","getPosts","a","fetch","posts","json","getUserPosts","userId","userPosts","filter","post","getPostDetails","postId","PostsList","selectedPostId","setPostId","useState","setPosts","useEffect","postsFromServer","loadPosts","handleOpenPost","className","map","title","id","type","onClick","getPostComments","deleteComment","commentId","method","postComment","name","email","body","headers","JSON","stringify","response","NewCommentForm","loadComments","userName","setUserName","setEmail","setBody","handleSubmit","event","preventDefault","onSubmit","placeholder","required","value","onChange","target","PostDetails","setPost","comments","setComments","isCommentsVisible","setIsCommentsVisible","postFromServer","commentsFromServer","handleCommentDelete","comment","getUsers","App","selectedUserId","setUserId","users","setUsers","loadUsers","usersFromServer","htmlFor","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d60d8a6.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api/posts/';\n\nexport async function getPosts(): Promise<Post[]> {\n  const posts = await fetch(`${BASE_URL}`);\n\n  return posts.json();\n}\n\nexport async function getUserPosts(userId: number) {\n  const userPosts = await getPosts();\n\n  if (userId === 0) {\n    return userPosts;\n  }\n\n  return userPosts.filter(post => post.userId === userId);\n}\n\nexport async function getPostDetails(postId: number) {\n  const post = await fetch(`${BASE_URL}${postId}`);\n\n  return post.json();\n}\n","import React, { useEffect, useState } from 'react';\nimport { getUserPosts } from '../../api/posts';\nimport './PostsList.scss';\n\ntype Props = {\n  userId: number,\n  selectedPostId: number,\n  setPostId: (postId: number) => void,\n};\n\nexport const PostsList: React.FC<Props> = ({ userId, selectedPostId, setPostId }) => {\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    async function loadPosts() {\n      const postsFromServer = await getUserPosts(userId);\n\n      setPosts(postsFromServer);\n    }\n\n    loadPosts();\n  }, [userId]);\n\n  const handleOpenPost = (postId: number) => {\n    setPostId(postId);\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li key={post.id} className=\"PostsList__item\">\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.title}\n            </div>\n            {selectedPostId !== post.id ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => handleOpenPost(post.id)}\n              >\n                Open\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => handleOpenPost(0)}\n              >\n                Close\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export const BASE_URL = 'https://mate.academy/students-api/comments';\n\nexport async function getPostComments(postId: number) {\n  const post = await fetch(`${BASE_URL}?postId=${postId}`);\n\n  return post.json();\n}\n\nexport function deleteComment(commentId: number) {\n  return fetch(`${BASE_URL}/${commentId}`, {\n    method: 'DELETE',\n  });\n}\n\nexport async function postComment(\n  postId: number,\n  name: string,\n  email: string,\n  body: string,\n) {\n  const response = await fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport { postComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  loadComments: () => void;\n  postId: number,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ loadComments, postId }) => {\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    await postComment(postId, userName, email, body);\n    await loadComments();\n    setUserName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"userName\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          required\n          value={userName}\n          onChange={(event) => setUserName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          required\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          required\n          value={body}\n          onChange={(event) => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment } from '../../api/comments';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  postId: number,\n};\n\nexport const PostDetails: React.FC<Props> = ({ postId }) => {\n  const [post, setPost] = useState<Post | null>(null);\n  const [comments, setComments] = useState<PostComment[]>([]);\n  const [isCommentsVisible, setIsCommentsVisible] = useState(false);\n\n  const loadPosts = async () => {\n    const postFromServer = await getPostDetails(postId);\n\n    setPost(postFromServer);\n  };\n\n  const loadComments = async () => {\n    const commentsFromServer = await getPostComments(postId);\n\n    setComments(commentsFromServer);\n  };\n\n  useEffect(() => {\n    loadPosts();\n    loadComments();\n  }, [postId]);\n\n  const handleCommentsVisibility = () => {\n    setIsCommentsVisible(!isCommentsVisible);\n  };\n\n  const handleCommentDelete = async (commentId: number) => {\n    await deleteComment(commentId);\n    loadComments();\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post?.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handleCommentsVisibility}\n        >\n          {isCommentsVisible ? 'Hide comments' : 'Show comments'}\n        </button>\n\n        {isCommentsVisible && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li key={comment.id} className=\"PostDetails__list-item\">\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => handleCommentDelete(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            loadComments={loadComments}\n            postId={postId}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","export const BASE_URL = 'https://mate.academy/students-api/users/';\n\nexport async function getUsers(): Promise<User[]> {\n  const posts = await fetch(`${BASE_URL}`);\n\n  return posts.json();\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUsers } from './api/users';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setUserId] = useState(0);\n  const [selectedPostId, setPostId] = useState(0);\n  const [users, setUsers] = useState<User[]>([]);\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n  };\n\n  useEffect(() => {\n    const loadUsers = async () => {\n      const usersFromServer = await getUsers();\n\n      setUsers(usersFromServer);\n    };\n\n    loadUsers();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"userSelect\">\n          Select a user: &nbsp;\n\n          <select\n            id=\"userSelect\"\n            className=\"App__user-selector\"\n            onChange={handleUserSelect}\n          >\n            <option value=\"0\">All users</option>\n            {users.map(user => (\n              <option value={user.id}>{user.name}</option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={selectedUserId}\n            selectedPostId={selectedPostId}\n            setPostId={setPostId}\n          />\n        </div>\n\n        {selectedPostId !== 0 && (\n          <div className=\"App__content\">\n            <PostDetails postId={selectedPostId} />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n\n/* <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option> */\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}